[workspace]
resolver = "3"
package.edition = "2024"
package.rust-version = "1.85.0"
members = [
    "crates/cubedaw",
    "crates/cubedaw-lib",
    "crates/cubedaw-worker",
    "crates/cubedaw-wasm",
    "crates/cubedaw-plugin",
    "crates/resourcekey",
    "xtask",
]


[workspace.lints.rust]
unsafe_op_in_unsafe_fn = "forbid"

[workspace.lints.clippy]
# TODO uncomment this when i have time for this
# pedantic = { level = "warn", priority = -1 }
needless_question_mark = "allow" # makes code harder to read in long question mark chains
unusual_byte_groupings = "allow" # misunderstands floating-point binary representation
needless_lifetimes = "allow"     # false positives :(
nonminimal_bool = "allow"        # makes code harder to read sometimes
too_many_arguments = "allow"     # "okay and how do you expect me to fix this?"

[workspace.dependencies]
egui = "0.31.1"
tracing = "0.1.41"
anyhow = "1.0.98"
ahash = "0.8.12"
smallvec = "1.15.0"
bytemuck = "1.23.0"
zerocopy = { version = "0.8.25", features = ["derive"] }
crossbeam = "0.8.4"
crossbeam-channel = "0.5.15"
replace_with = "0.1.8"
bumpalo = "3.17.0"
work-queue = "0.1.4"
semver = "1.0.26"
ascii = "1.1.0"
serde = "1.0.219"
# TODO meminterval works but it's missing some features (like iterating over an entire IntervalTree).
# however there doesn't seem to be a viable alternative for a low-dependency mutable interval tree already on crates.io
# possibly contribute back to meminterval if they're fine with it or fork it?
meminterval = "0.4.1"
